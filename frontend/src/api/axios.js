// src/api/axios.js
import axios from 'axios';
import qs from 'qs';

const instance = axios.create({
  baseURL: 'http://localhost:8080',
  paramsSerializer: (params) => {
    return qs.stringify(params, { arrayFormat: 'repeat', allowDots: true });
  }
});

// üîπ –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –æ—Ç—Ä–∏–º–∞–Ω–Ω—è —Ç–æ–∫–µ–Ω–∞ –∑ localStorage
const getAuthData = () => {
  try {
    return JSON.parse(localStorage.getItem('auth')) || null;
  } catch (error) {
    console.error('–ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–∞—Ä—Å–∏–Ω–≥—É —Ç–æ–∫–µ–Ω–∞ –∑ localStorage:', error);
    return null;
  }
};

// üîπ –î–æ–¥–∞—î–º–æ —Ç–æ–∫–µ–Ω –≤ –∫–æ–∂–µ–Ω –∑–∞–ø–∏—Ç
instance.interceptors.request.use(
  (config) => {
    const auth = getAuthData();
    const token = auth?.token;

    if (token) {
      config.headers.Authorization = `Bearer ${token}`;
    }

    return config;
  },
  (error) => Promise.reject(error)
);

// üîπ –û–±—Ä–æ–±–∫–∞ –ø–æ–º–∏–ª–æ–∫ (–±–µ–∑ refresh flow)
instance.interceptors.response.use(
  (res) => res,
  (err) => {
    if (err.response?.status === 401) {
      // —Ç–æ–∫–µ–Ω –Ω–µ–¥—ñ–π—Å–Ω–∏–π ‚Üí —á–∏—Å—Ç–∏–º–æ –ª–æ–∫–∞–ª–∫—É —ñ –≤—ñ–¥–ø—Ä–∞–≤–ª—è—î–º–æ –Ω–∞ –ª–æ–≥—ñ–Ω
      localStorage.removeItem('auth');
      localStorage.removeItem('userProfile');
      window.location.href = '/login';
    }

    return Promise.reject(err);
  }
);

export default instance;
