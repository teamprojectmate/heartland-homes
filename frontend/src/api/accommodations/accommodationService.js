import api from '../axios';

//  –ü–æ—à—É–∫ –∂–∏—Ç–ª–∞ –∑ —Ñ—ñ–ª—å—Ç—Ä–∞–º–∏ (GET)
export const fetchAccommodations = async (params = {}) => {
  const cleanedParams = Object.fromEntries(
    Object.entries(params).filter(
      ([, value]) =>
        value != null &&
        value !== '' &&
        !(typeof value === 'object' && Object.keys(value).length === 0)
    )
  );

  try {
    const response = await api.get('/accommodations/search', {
      params: cleanedParams
    });
    return response.data;
  } catch (err) {
    console.error(
      '‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ GET /accommodations/search:',
      err.response?.data || err.message
    );
    throw err;
  }
};

//  –û—Ç—Ä–∏–º–∞—Ç–∏ –¥–µ—Ç–∞–ª—ñ –∂–∏—Ç–ª–∞
export const getAccommodationById = async (id) => {
  const response = await api.get(`/accommodations/${id}`);
  return response.data;
};

//  –°—Ç–≤–æ—Ä–∏—Ç–∏ –∂–∏—Ç–ª–æ
export const createAccommodation = async (formData) => {
  const response = await api.post('/accommodations', formData);
  return response.data;
};

//  –û–Ω–æ–≤–∏—Ç–∏ –∂–∏—Ç–ª–æ (–ø–æ–≤–Ω–∏–π PUT)
export const updateAccommodation = async (id, formData) => {
  const response = await api.put(`/accommodations/${id}`, formData);
  return response.data;
};

//  –î–ª—è –∞–¥–º—ñ–Ω–∞ (—Å–ø–∏—Å–æ–∫ –±–µ–∑ —Ñ—ñ–ª—å—Ç—Ä—ñ–≤, –ø–∞–≥—ñ–Ω–∞—Ü—ñ—è)
export const fetchAdminAccommodations = async (page = 0, size = 10) => {
  const response = await api.get('/accommodations', { params: { page, size } });
  return response.data;
};

//  –í–∏–¥–∞–ª–∏—Ç–∏ –∂–∏—Ç–ª–æ (admin only)
export const deleteAccommodation = async (id) => {
  const response = await api.delete(`/accommodations/${id}`);
  return response.data;
};

//  –û–Ω–æ–≤–∏—Ç–∏ —Å—Ç–∞—Ç—É—Å –∂–∏—Ç–ª–∞ (PATCH /accommodations/{id}/status)
export const updateAccommodationStatus = async (id, status) => {
  try {
    console.log(`üì§ PATCH /accommodations/${id}/status ‚Üí`, status);

    const response = await api.patch(`/accommodations/${id}/status`, {
      status: status
    });

    console.log('‚úÖ –í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:', response.data);
    return response.data;
  } catch (err) {
    console.error(
      `‚ùå –ü–æ–º–∏–ª–∫–∞ –ø—Ä–∏ PATCH /accommodations/${id}/status:`,
      err.response?.data || err.message
    );
    throw err;
  }
};
