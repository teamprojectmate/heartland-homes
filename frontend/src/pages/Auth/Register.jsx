// src/pages/Auth/Register.jsx
import React, { useState, useEffect } from 'react';
import { useDispatch, useSelector } from 'react-redux';
import { useNavigate, Link } from 'react-router-dom';
import { FaUser, FaEnvelope, FaLock } from 'react-icons/fa';
import { register, reset } from '../../store/slices/authSlice';
import Notification from '../../components/Notification';
import '../../styles/components/_auth.scss';

const Register = () => {
  const [formData, setFormData] = useState({
    email: '',
    password: '',
    confirmPassword: '',
    firstName: '',
    lastName: ''
  });

  const { email, password, confirmPassword, firstName, lastName } = formData;

  const dispatch = useDispatch();
  const navigate = useNavigate();

  const { isLoading, isError, isSuccess, message } = useSelector((state) => state.auth);

  // ‚úÖ –†–µ–¥—ñ—Ä–µ–∫—Ç –ø—ñ—Å–ª—è —É—Å–ø—ñ—à–Ω–æ—ó —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó
  useEffect(() => {
    if (isSuccess) {
      navigate('/login');
    }
    dispatch(reset());
  }, [isSuccess, navigate, dispatch]);

  const onChange = (e) => {
    setFormData((prev) => ({
      ...prev,
      [e.target.name]: e.target.value
    }));
  };

  const onSubmit = (e) => {
    e.preventDefault();
    if (password !== confirmPassword) {
      alert('–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å');
      return;
    }
    dispatch(register({ email, password, firstName, lastName }));
  };

  return (
    <div className="auth-layout">
      <div className="auth-card">
        <h2 className="auth-title">–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è</h2>

        {isError && <Notification message={message} type="error" />}
        {isSuccess && (
          <Notification
            message="–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è —É—Å–ø—ñ—à–Ω–∞! –¢–µ–ø–µ—Ä –≤–∏ –º–æ–∂–µ—Ç–µ —É–≤—ñ–π—Ç–∏."
            type="success"
          />
        )}

        <form onSubmit={onSubmit}>
          <div className="form-group with-icon">
            <FaUser className="input-icon" />
            <input
              type="text"
              id="firstName"
              name="firstName"
              className="form-control"
              placeholder="–Ü–º‚Äô—è"
              value={firstName}
              onChange={onChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaUser className="input-icon" />
            <input
              type="text"
              id="lastName"
              name="lastName"
              className="form-control"
              placeholder="–ü—Ä—ñ–∑–≤–∏—â–µ"
              value={lastName}
              onChange={onChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaEnvelope className="input-icon" />
            <input
              type="email"
              id="email"
              name="email"
              className="form-control"
              placeholder="–ï–ª–µ–∫—Ç—Ä–æ–Ω–Ω–∞ –ø–æ—à—Ç–∞"
              value={email}
              onChange={onChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaLock className="input-icon" />
            <input
              type="password"
              id="password"
              name="password"
              className="form-control"
              placeholder="–ü–∞—Ä–æ–ª—å"
              value={password}
              onChange={onChange}
              required
            />
          </div>

          <div className="form-group with-icon">
            <FaLock className="input-icon" />
            <input
              type="password"
              id="confirmPassword"
              name="confirmPassword"
              className="form-control"
              placeholder="–ü—ñ–¥—Ç–≤–µ—Ä–¥—ñ—Ç—å –ø–∞—Ä–æ–ª—å"
              value={confirmPassword}
              onChange={onChange}
              required
            />
          </div>

          <button type="submit" className="btn btn-primary" disabled={isLoading}>
            {isLoading ? '–†–µ—î—Å—Ç—Ä–∞—Ü—ñ—è...' : '–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—è'}
          </button>
        </form>

        <p className="form-subtitle text-center">
          –í–∂–µ –º–∞—î—Ç–µ –∞–∫–∞—É–Ω—Ç? <Link to="/login">–£–≤—ñ–π—Ç–∏</Link>
        </p>
      </div>

      {/* üîπ –î–æ–¥–∞—î–º–æ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ç–æ—Ä register */}
      <div className="auth-side register">
        <span className="auth-icon">‚ú®</span>
        <h2 className="auth-title">–õ–∞—Å–∫–∞–≤–æ –ø—Ä–æ—Å–∏–º–æ!</h2>
        <p className="auth-subtitle">
          –ó–∞—Ä–µ—î—Å—Ç—Ä—É–π—Ç–µ—Å—å, —â–æ–± –∑–Ω–∞–π—Ç–∏ —Å–≤—ñ–π —ñ–¥–µ–∞–ª—å–Ω–∏–π –¥—ñ–º —Ä–∞–∑–æ–º –∑{' '}
          <strong>Heartland Homes</strong>.
        </p>
      </div>
    </div>
  );
};

export default Register;
