import React, { useState, useCallback } from 'react';
import '../styles/components/_forms.scss';
import '../styles/components/_buttons.scss';
import '../styles/components/_searchForm.scss';

// –û–ø—Ü—ñ—ó –¥–ª—è —Ç–∏–ø—ñ–≤ –∂–∏—Ç–ª–∞
const ACCOMMODATION_TYPES = [
  { value: 'HOUSE', label: '–ë—É–¥–∏–Ω–æ–∫' },
  { value: 'APARTMENT', label: '–ö–≤–∞—Ä—Ç–∏—Ä–∞' },
  { value: 'HOTEL', label: '–ì–æ—Ç–µ–ª—å' },
  { value: 'VACATION_HOME', label: '–î—ñ–º –¥–ª—è –≤—ñ–¥–ø–æ—á–∏–Ω–∫—É' },
  { value: 'HOSTEL', label: '–•–æ—Å—Ç–µ–ª' }
];

const SearchForm = ({ onSearch }) => {
  const [formData, setFormData] = useState({
    city: '',
    type: '',
    minDailyRate: '',
    maxDailyRate: ''
  });

  // –ú–µ–º–æ—ñ–∑–∞—Ü—ñ—è, —â–æ–± –Ω–µ —Å—Ç–≤–æ—Ä—é–≤–∞—Ç–∏ –Ω–æ–≤—ñ —Ñ—É–Ω–∫—Ü—ñ—ó –Ω–∞ –∫–æ–∂–µ–Ω —Ä–µ–Ω–¥–µ—Ä
  const handleChange = useCallback((e) => {
    const { name, value } = e.target;
    setFormData((prev) => ({
      ...prev,
      [name]: value
    }));
  }, []);

  const handleSubmit = useCallback(
    (e) => {
      e.preventDefault();
      if (onSearch) {
        onSearch(e, formData);
      }
    },
    [onSearch, formData]
  );

  return (
    <form onSubmit={handleSubmit} className="search-form-container">
      {/* –ú—ñ—Å—Ç–æ */}
      <div className="search-input-group">
        <label htmlFor="city">–ú—ñ—Å—Ç–æ</label>
        <input
          type="text"
          id="city"
          name="city"
          placeholder="–ù–∞–ø—Ä–∏–∫–ª–∞–¥, –ö–∏—ó–≤"
          className="form-control"
          value={formData.city}
          onChange={handleChange}
        />
      </div>

      {/* –¢–∏–ø –∂–∏—Ç–ª–∞ */}
      <div className="search-input-group">
        <label htmlFor="type">–¢–∏–ø –∂–∏—Ç–ª–∞</label>
        <select
          id="type"
          name="type"
          className="form-control"
          value={formData.type}
          onChange={handleChange}
        >
          <option value="">‚Äî –û–±–µ—Ä—ñ—Ç—å —Ç–∏–ø ‚Äî</option>
          {ACCOMMODATION_TYPES.map((option) => (
            <option key={option.value} value={option.value}>
              {option.label}
            </option>
          ))}
        </select>
      </div>

      {/* –¶—ñ–Ω–∞ –≤—ñ–¥ */}
      <div className="search-input-group">
        <label htmlFor="minDailyRate">–¶—ñ–Ω–∞ –≤—ñ–¥</label>
        <input
          type="number"
          id="minDailyRate"
          name="minDailyRate"
          className="form-control"
          value={formData.minDailyRate}
          onChange={handleChange}
        />
      </div>

      {/* –¶—ñ–Ω–∞ –¥–æ */}
      <div className="search-input-group">
        <label htmlFor="maxDailyRate">–¶—ñ–Ω–∞ –¥–æ</label>
        <input
          type="number"
          id="maxDailyRate"
          name="maxDailyRate"
          className="form-control"
          value={formData.maxDailyRate}
          onChange={handleChange}
        />
      </div>

      {/* –ö–Ω–æ–ø–∫–∞ */}
      <button className="btn-primary" type="submit">
        üîç –®—É–∫–∞—Ç–∏
      </button>
    </form>
  );
};

// –û–±–≥–æ—Ä—Ç–∞—î–º–æ —É React.memo –¥–ª—è –æ–ø—Ç–∏–º—ñ–∑–∞—Ü—ñ—ó
export default React.memo(SearchForm);
