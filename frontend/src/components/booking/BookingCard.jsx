import React from 'react';
import { Link } from 'react-router-dom';
import { fixDropboxUrl } from '../../utils/fixDropboxUrl';
import { TrashIcon } from '@heroicons/react/24/solid';
import StatusSelect from '../selects/StatusSelect';
import BookingStatusBlock from '../BookingStatusBlock';

import '../../styles/components/booking/_booking-card.scss';

const fallbackImage = '/no-image.png';

const BookingCard = ({
  booking,
  onCancel,
  onPay,
  onStatusChange,
  onDelete,
  showAdminControls = false
}) => {
  const imageUrl = booking.accommodation?.image
    ? fixDropboxUrl(booking.accommodation.image)
    : fallbackImage;

  const isPaid = booking.payment?.status === 'PAID';

  return (
    <div className="booking-card">
      {/* –§–æ—Ç–æ */}
      <div className="booking-card-image-wrapper">
        <img
          src={imageUrl}
          alt={booking.accommodation?.name || '–ó–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ–º–µ—à–∫–∞–Ω–Ω—è'}
          className="booking-card-image"
          onError={(e) => {
            e.target.onerror = null;
            e.target.src = fallbackImage;
          }}
        />
      </div>

      {/* –ö–æ–Ω—Ç–µ–Ω—Ç */}
      <div className="booking-card-content">
        <div className="booking-card-header">
          <h4 className="booking-card-title">
            {booking.accommodation?.name || '–ë–µ–∑ –Ω–∞–∑–≤–∏'}
          </h4>
          <p className="booking-card-location">
            {booking.accommodation?.city || '–ù–µ–≤—ñ–¥–æ–º–µ –º—ñ—Å—Ç–æ'}
          </p>
        </div>

        <div className="booking-card-info">
          <p>
            <strong>–î–∞—Ç–∞ –∑–∞—ó–∑–¥—É:</strong> {booking.checkInDate}
          </p>
          <p>
            <strong>–î–∞—Ç–∞ –≤–∏—ó–∑–¥—É:</strong> {booking.checkOutDate}
          </p>

          {/* üîπ –°—Ç–∞—Ç—É—Å–∏ */}
          <BookingStatusBlock booking={booking} />

          {showAdminControls && booking.user && (
            <p>
              <strong>–ö–æ—Ä–∏—Å—Ç—É–≤–∞—á:</strong> {booking.user.firstName}{' '}
              {booking.user.lastName} ({booking.user.email})
            </p>
          )}
        </div>

        {/* –¶—ñ–Ω–∞ */}
        {booking.totalPrice && (
          <p className="booking-card-price">
            <strong>{booking.totalPrice} –≥—Ä–Ω</strong>
          </p>
        )}

        {/* –ö–Ω–æ–ø–∫–∏ */}
        <div className="booking-card-actions">
          {!showAdminControls && (
            <>
              <Link to={`/my-bookings/${booking.id}`} className="btn btn-primary">
                –î–µ—Ç–∞–ª—ñ
              </Link>
              {booking.status === 'PENDING' && !isPaid && (
                <button className="btn btn-warning" onClick={() => onPay(booking.id)}>
                  –û–ø–ª–∞—Ç–∏—Ç–∏
                </button>
              )}
              {!isPaid && booking.status !== 'CANCELED' && (
                <button className="btn btn-danger" onClick={() => onCancel(booking.id)}>
                  –°–∫–∞—Å—É–≤–∞—Ç–∏
                </button>
              )}
            </>
          )}

          {showAdminControls && (
            <>
              <StatusSelect
                value={booking.status}
                onChange={(newStatus) => onStatusChange(booking, newStatus)}
              />
              <button
                className="btn-icon btn-danger"
                onClick={() => onDelete(booking.id)}
                title="–í–∏–¥–∞–ª–∏—Ç–∏ –±—Ä–æ–Ω—é–≤–∞–Ω–Ω—è"
              >
                <TrashIcon className="w-5 h-5 text-white" />
              </button>
            </>
          )}
        </div>
      </div>
    </div>
  );
};

export default BookingCard;
